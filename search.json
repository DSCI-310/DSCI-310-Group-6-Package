[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 package6 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Muke Wang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang M (2022). package6: Helper Functions DSCI-310-Group-6. R package version 0.0.0.9000.","code":"@Manual{,   title = {package6: Helper Functions for DSCI-310-Group-6},   author = {Muke Wang},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"package6","dir":"","previous_headings":"","what":"Helper Functions for DSCI-310-Group-6","title":"Helper Functions for DSCI-310-Group-6","text":"goal package6 encapsulate useful helper functions used data analysis projects similar New Taipei City Real Estate Value Prediction.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions for DSCI-310-Group-6","text":"can install development version package6 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310/DSCI-310-Group6-Package\")"},{"path":[]},{"path":"/index.html","id":"format_column_names","dir":"","previous_headings":"Usage","what":"format_column_names()","title":"Helper Functions for DSCI-310-Group-6","text":"Sometimes raw data set column names blank spaces column names. generally good idea remove blank spaces. base::gsub() . Notice gsub() requires three arguments modifies original data frame.Also return value data frame. package6::format_column_names() requires one argument. modify original data frame returns data frame formatted column names.","code":"df <- data.frame(`col Name1`= c(1,2),`col Name2` = c(\"3\", \"4\"),  check.names = FALSE) df #>   col Name1 col Name2 #> 1         1         3 #> 2         2         4 names(df) <- gsub(\" \", \"_\", names(df)) df #>   col_Name1 col_Name2 #> 1         1         3 #> 2         2         4 df <- data.frame(`col Name1`= c(1,2),`col Name2` = c(\"3\", \"4\"),  check.names = FALSE) formatted_df <- format_column_names(df) formatted_df #>   col_Name1 col_Name2 #> 1         1         3 #> 2         2         4"},{"path":"/index.html","id":"get_rmse","dir":"","previous_headings":"Usage","what":"get_RMSE()","title":"Helper Functions for DSCI-310-Group-6","text":"Calculates RMSE given predicted actual value. TODO","code":""},{"path":"/index.html","id":"split_data","dir":"","previous_headings":"Usage","what":"split_data()","title":"Helper Functions for DSCI-310-Group-6","text":"TODO","code":""},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Helper Functions for DSCI-310-Group-6","text":"TODO","code":""},{"path":[]},{"path":"/reference/cal_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"RMSE calculator function — cal_rmse","title":"RMSE calculator function — cal_rmse","text":"RMSE calculator function","code":""},{"path":"/reference/cal_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RMSE calculator function — cal_rmse","text":"","code":"cal_rmse(predicted, actual)"},{"path":"/reference/cal_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RMSE calculator function — cal_rmse","text":"predicted predicted numeric vector representing values actual actual numeric vector representing actual values data","code":""},{"path":"/reference/cal_rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RMSE calculator function — cal_rmse","text":"int value indicating RMSE","code":""},{"path":"/reference/cal_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RMSE calculator function — cal_rmse","text":"","code":"x <- seq(-10, 10, by = .1) y <- dnorm(x, mean = 2.5, sd = 0.5) cal_rmse(x,y) #> [1] 5.78"},{"path":"/reference/format_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats Column Names — format_column_names","title":"Formats Column Names — format_column_names","text":"Substitutes blank space \" \" column names input data frame \"_\". \" \" column names, return data frame.","code":""},{"path":"/reference/format_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats Column Names — format_column_names","text":"","code":"format_column_names(df)"},{"path":"/reference/format_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats Column Names — format_column_names","text":"df data frame","code":""},{"path":"/reference/format_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats Column Names — format_column_names","text":"data frame \" \" column names","code":""},{"path":"/reference/format_column_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formats Column Names — format_column_names","text":"","code":"df <- data.frame (`colName1`  = c(\"value_1\", \"value_2\"),`colName2` = c(\"value_1\", \"value_2\")) format_column_names(df) #>   colName1 colName2 #> 1  value_1  value_1 #> 2  value_2  value_2"},{"path":"/reference/split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data into 3 data frames — split_data","title":"Split data into 3 data frames — split_data","text":"Split data 3 data frames","code":""},{"path":"/reference/split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data into 3 data frames — split_data","text":"","code":"split_data(dataset, train_perc = 0.6, vs_prec = 0.2, test_perc = 0.2)"},{"path":"/reference/split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data into 3 data frames — split_data","text":"dataset data set data frame train_perc percentage train data, default value 0.6 vs_prec percentage variable selection data, default value 0.2 test_perc percentage test data, default value 0.2","code":""},{"path":"/reference/split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data into 3 data frames — split_data","text":"list 3 data frame: train data sets, test data sets, variable selection data sets","code":""},{"path":"/reference/split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split data into 3 data frames — split_data","text":"","code":"x=data.frame(replicate(10,sample(0:1,1000,rep=TRUE))) out = split_data(x)"}]
